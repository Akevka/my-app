{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","Preloader","className","s","content","descriptionBlock","src","photos","large","isOwner","type","target","files","length","savePhoto","Post","item","message","likesCount","MyPosts","memo","console","log","postsElements","posts","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","textarea","component","Textarea","name","validate","required","placeholder","class","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.43ea4b50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1hjMU\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1b0Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Lb1rr\",\"posts\":\"MyPosts_posts__32M1Q\",\"textarea\":\"MyPosts_textarea__1-hVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2kh4y\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        );\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n               status: this.props.status\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span  onDoubleClick={this.activateEditMode} >{this.props.status || \"Net statusa\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"net statusa\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n            if (e.target.files.length) {\r\n                props.savePhoto(e.target.files[0]);\r\n            }\r\n    }\r\n\r\n\r\n    return <div className={s.content}>\r\n\r\n        {/*<div>*/}\r\n        {/*    <img src='http://www.radionetplus.ru/uploads/posts/2013-05/1369460629_panda-1.jpeg'/>*/}\r\n        {/*</div>*/}\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large || \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-user-vector-avatar-png-image_4830521.jpg\"}/>\r\n            {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) =>{\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n\r\n            <img src='https://png.pngtree.com/png-clipart/20190924/original/pngtree-user-vector-avatar-png-image_4830521.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\n const MyPosts = React.memo(props => {\r\n\r\n     console.log(\"RENDER YO\");\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.textarea} component={Textarea} name=\"newPostText\" validate={[required,maxLength30]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div><button class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" >Add post</button></div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm ({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\n\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n            addPost: (newPostText) => {\r\n                dispatch(addPostActionCreator(newPostText));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n    const Profile = (props) =>{\r\n        return(\r\n        <div>\r\n           <ProfileInfo savePhoto={props.savePhoto}\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}/>\r\n           <MyPostsContainer/>\r\n       </div>\r\n       )\r\n    }\r\n\r\n    export default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}