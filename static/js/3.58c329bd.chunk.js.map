{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","MyPosts","React","memo","console","log","postsElements","posts","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","Field","textarea","component","Textarea","name","validate","required","placeholder","class","type","value","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","content","descriptionBlock","photos","large","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.58c329bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1hjMU\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1b0Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Lb1rr\",\"posts\":\"MyPosts_posts__32M1Q\",\"textarea\":\"MyPosts_textarea__1-hVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2kh4y\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) =>{\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n\r\n            <img src='https://png.pngtree.com/png-clipart/20190924/original/pngtree-user-vector-avatar-png-image_4830521.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\n const MyPosts = React.memo(props => {\r\n\r\n     console.log(\"RENDER YO\");\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.textarea} component={Textarea} name=\"newPostText\" validate={[required,maxLength30]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div><button class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" >Add post</button></div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm ({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        );\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n               status: this.props.status\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span  onDoubleClick={this.activateEditMode} >{this.props.status || \"Net statusa\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"net statusa\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={s.content}>\r\n\r\n        {/*<div>*/}\r\n        {/*    <img src='http://www.radionetplus.ru/uploads/posts/2013-05/1369460629_panda-1.jpeg'/>*/}\r\n        {/*</div>*/}\r\n        <div className={s.descriptionBlock}>\r\n            <img src={props.profile.photos.large}/>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n            addPost: (newPostText) => {\r\n                dispatch(addPostActionCreator(newPostText));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n    const Profile = (props) =>{\r\n\r\n\r\n\r\n        return(\r\n        <div>\r\n           <ProfileInfo profile={props.profile}  status={props.status} updateStatus={props.updateStatus}/>\r\n           <MyPostsContainer/>\r\n       </div>\r\n       )\r\n    }\r\n\r\n    export default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n    class ProfileContainer extends React.Component {\r\n\r\n        componentDidMount() {\r\n            let userId = this.props.match.params.userId;\r\n            if (!userId) {\r\n                userId = this.props.authorizedUserId;\r\n                if (!userId) {\r\n                    this.props.history.push(\"/login\");\r\n                }\r\n            }\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n\r\n\r\n        render() {\r\n\r\n            return (\r\n                <div>\r\n                    <Profile {...this.props}    profile={this.props.profile}\r\n                                                status={this.props.status}\r\n                                                updateStatus={this.props.updateStatus}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    let mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n});\r\n\r\n   export default compose (\r\n        connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n        withRouter,\r\n        withAuthRedirect\r\n    )(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}