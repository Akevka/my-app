{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","class","type","className","style","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","content","descriptionBlock","src","photos","large","file","target","files","length","savePhoto","editAva","initialValues","formData","saveProfile","then","Post","item","message","likesCount","MyPosts","memo","console","log","postsElements","posts","p","id","createRef","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength30","maxLengthCreator","Field","textarea","component","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.f830d978.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__1hjMU\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1b0Gk\",\"contact\":\"ProfileInfo_contact__MLvOl\",\"file\":\"ProfileInfo_file__3TF1F\",\"editAva\":\"ProfileInfo_editAva__yvgRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Lb1rr\",\"posts\":\"MyPosts_posts__32M1Q\",\"textarea\":\"MyPosts_textarea__1-hVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2kh4y\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b><span onClick={activateEditMode}>{props.status || \"net statusa\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: true\r\n            }\r\n        );\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {\r\n                editMode: false\r\n            }\r\n        );\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n               status: this.props.status\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            {!this.state.editMode &&\r\n                <div>\r\n                    <span  onDoubleClick={this.activateEditMode} >{this.props.status || \"Net statusa\"}</span>\r\n                </div>\r\n            }\r\n            {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {Contact} from \"./ProfileInfo\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({profile,handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div>\r\n            <button onClick={() => {}} class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return <div className={s.content}>\r\n\r\n        {/*<div>*/}\r\n        {/*    <img src='http://www.radionetplus.ru/uploads/posts/2013-05/1369460629_panda-1.jpeg'/>*/}\r\n        {/*</div>*/}\r\n        <div className={s.descriptionBlock}>\r\n            <img\r\n                src={props.profile.photos.large || \"https://png.pngtree.com/png-clipart/20190924/original/pngtree-user-vector-avatar-png-image_4830521.jpg\"}/>\r\n            {props.isOwner && <input  className={s.file} type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                <div className={s.editAva}>{props.isOwner && <button  className=\"btn btn-primary\">Change avatar</button>}</div>\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={props.profile}  profile={props.profile} onSubmit={onSubmit}/>\r\n                : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner} />}\r\n\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n   return  <div>\r\n\r\n       {isOwner && <div><button onClick={goToEditMode} class=\"btn btn-primary\" type=\"submit\" value=\"Submit\">edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) =>{\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n\r\n            <img src='https://png.pngtree.com/png-clipart/20190924/original/pngtree-user-vector-avatar-png-image_4830521.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\n\r\n\r\n const MyPosts = React.memo(props => {\r\n\r\n     console.log(\"RENDER YO\");\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n});\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.textarea} component={Textarea} name=\"newPostText\" validate={[required,maxLength30]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div><button class=\"btn btn-primary\" type=\"submit\" value=\"Submit\" >Add post</button></div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm ({form:\"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\n\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n            addPost: (newPostText) => {\r\n                dispatch(addPostActionCreator(newPostText));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n    const Profile = (props) =>{\r\n        return(\r\n        <div>\r\n           <ProfileInfo savePhoto={props.savePhoto}\r\n                        isOwner={props.isOwner}\r\n                        profile={props.profile}\r\n                        status={props.status}\r\n                        updateStatus={props.updateStatus}\r\n                        saveProfile={props.saveProfile}/>\r\n           <MyPostsContainer/>\r\n       </div>\r\n       )\r\n    }\r\n\r\n    export default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus,savePhoto,saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}